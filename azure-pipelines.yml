trigger:
  - main

pool:
  name: Default

variables:
  azureWebAppName: 'flask-azure-webapp'
  azureResourceGroup: 'flask-rg'
  pythonVersion: '3.10'

steps:
# - task: UsePythonVersion@0
#   inputs:
#     versionSpec: '$(pythonVersion)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install Python dependencies'

- script: |
    export PYTHONPATH=$(System.DefaultWorkingDirectory)
    pytest tests/
  displayName: 'Run Unit Tests'

- script: |
    zip -r app.zip *
  displayName: 'Zip app files'


# - task: AzureWebApp@1
#   displayName: 'Deploy to Azure Web App'
#   inputs:
#     azureSubscription: 'azure-flask-fp'      # ðŸ‘ˆ Must match your service connection name exactly
#     appName: '$(azureWebAppName)'            # ðŸ‘ˆ Matches the variable you defined at top
#     package: 'app.zip'

- task: AzureWebApp@1
  displayName: 'Deploy to Staging Slot'
  inputs:
    azureSubscription: 'azure-flask-fp'  # Your service connection name
    appName: 'flask-azure-webapp'        # Your app name
    slotName: 'staging'                  # âœ… Add this to target staging
    package: 'app.zip'

- task: AzureCLI@2
  displayName: 'Swap Slots: Staging to Production'
  inputs:
    azureSubscription: 'azure-flask-sp'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az webapp deployment slot swap \
        --resource-group flask-rg \
        --name flask-azure-webapp \
        --slot staging \
        --target-slot production